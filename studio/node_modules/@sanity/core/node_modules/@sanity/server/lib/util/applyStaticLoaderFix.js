'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _merge2 = require('lodash/merge');

var _merge3 = _interopRequireDefault(_merge2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var applyStaticLoaderFix = function applyStaticLoaderFix(wpConfig, sanityConfig) {
  // We need to fix the public path, prefixing the server URL for assets such as
  // images to work in development mode (related to blob's generated by style-loader)
  var httpHost = sanityConfig.httpHost,
      httpPort = sanityConfig.httpPort,
      staticPath = sanityConfig.staticPath,
      basePath = sanityConfig.basePath;


  if (!staticPath || !basePath) {
    throw new Error('`staticPath` and `basePath` must be specified in order for the static loader fix to work');
  }

  return (0, _get3.default)(wpConfig, 'module.loaders', []).map(function (loader) {
    if (typeof loader.loader !== 'string' || !loader.loader.includes('file-loader')) {
      return loader;
    }

    var staticDir = _path2.default.relative(basePath, staticPath);
    var rootPath = staticDir.replace(/^\.*\/|\/+$/g, '');

    return (0, _merge3.default)({}, loader, {
      query: {
        publicPath: 'http://' + httpHost + ':' + httpPort + '/' + rootPath + '/'
      }
    });
  });
};

exports.default = applyStaticLoaderFix;